// <auto-generated />
using System;
using Kolokwium20200709.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kolokwium20200709.Migrations
{
    [DbContext(typeof(ArtDbContext))]
    partial class ArtDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kolokwium20200709.Models.Art_Movement", b =>
                {
                    b.Property<int>("IdArtMovement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMovementFounder")
                        .HasColumnType("int");

                    b.Property<int?>("IdNextMovement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdArtMovement");

                    b.HasIndex("IdNextMovement");

                    b.ToTable("Art_Movements");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Art_MovementIdArtMovement")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdArtMovement")
                        .HasColumnType("int");

                    b.Property<int?>("IdCityOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdArtist");

                    b.HasIndex("Art_MovementIdArtMovement");

                    b.HasIndex("IdArtMovement")
                        .IsUnique();

                    b.HasIndex("IdCityOfBirth");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.HasKey("IdCity");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.Painting", b =>
                {
                    b.Property<int>("IdPainting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int?>("IdCoArtist")
                        .HasColumnType("int");

                    b.Property<string>("PaintingMedia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SurfaceType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPainting");

                    b.HasIndex("IdArtist");

                    b.HasIndex("IdCoArtist");

                    b.ToTable("Paintings");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.Art_Movement", b =>
                {
                    b.HasOne("Kolokwium20200709.Models.Art_Movement", "NextMovement")
                        .WithMany("PredecesorMovements")
                        .HasForeignKey("IdNextMovement");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.Artist", b =>
                {
                    b.HasOne("Kolokwium20200709.Models.Art_Movement", null)
                        .WithMany("Artists")
                        .HasForeignKey("Art_MovementIdArtMovement");

                    b.HasOne("Kolokwium20200709.Models.Art_Movement", "Art_Movement")
                        .WithOne("Founder")
                        .HasForeignKey("Kolokwium20200709.Models.Artist", "IdArtMovement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolokwium20200709.Models.City", "CityOfBirth")
                        .WithMany("Artists")
                        .HasForeignKey("IdCityOfBirth");
                });

            modelBuilder.Entity("Kolokwium20200709.Models.Painting", b =>
                {
                    b.HasOne("Kolokwium20200709.Models.Artist", "Artist")
                        .WithMany("PaintingsCreated")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolokwium20200709.Models.Artist", "CoArtist")
                        .WithMany("PaintingsCoCreated")
                        .HasForeignKey("IdCoArtist");
                });
#pragma warning restore 612, 618
        }
    }
}
